# Generated by Django 5.2.1 on 2025-05-22 10:59

import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='HarmonizedData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('participant_id', models.CharField(help_text='Unique participant identifier', max_length=100)),
                ('visit_date', models.DateField(help_text='Date of clinical visit')),
                ('location_id', models.CharField(help_text='Clinical site location identifier', max_length=100)),
                ('age', models.IntegerField(blank=True, help_text='Age of participant in years', null=True)),
                ('sex', models.CharField(blank=True, choices=[('Male', 'Male'), ('Female', 'Female'), ('Other', 'Other'), ('Unknown', 'Unknown')], help_text='Biological sex', max_length=10, null=True)),
                ('study_group', models.CharField(blank=True, help_text='Study group or arm assignment', max_length=100, null=True)),
                ('body_temperature', models.FloatField(blank=True, help_text='Body temperature in Celsius', null=True)),
                ('systolic_bp', models.IntegerField(blank=True, help_text='Systolic blood pressure in mmHg', null=True)),
                ('diastolic_bp', models.IntegerField(blank=True, help_text='Diastolic blood pressure in mmHg', null=True)),
                ('adverse_event', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], help_text='Whether an adverse event occurred', max_length=3, null=True)),
                ('temperature', models.FloatField(blank=True, help_text='Daily mean temperature in Celsius', null=True)),
                ('precipitation', models.FloatField(blank=True, help_text='Daily precipitation in mm', null=True)),
                ('humidity', models.FloatField(blank=True, help_text='Daily mean relative humidity in percent', null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('air_quality_index', models.IntegerField(blank=True, help_text='Air Quality Index value', null=True)),
            ],
            options={
                'verbose_name': 'Harmonized Data',
                'verbose_name_plural': 'Harmonized Data',
                'unique_together': {('participant_id', 'visit_date', 'location_id')},
            },
        ),
    ]
